1. RuntimeError: The size of tensor a (4) must match the size of tensor b (3) at non-singleton dimension 1
2. No error when adding a (3,4) shape tensor to a (4,) shape tensor. The (4,) shape tensor is broadcast as if it is (1,4) and tiled 3 times.
3. RuntimeError: The size of tensor a (3) must match the size of tensor b (4) at non-singleton dimension 0
4. No error when adding a float32 to a float64. The output is up-cast to float64.
5. RuntimeError: value cannot be converted to type uint8_t without overflow
6. RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!
7. No error. Getting a scatter plot for random 100 values of x and y
8. TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
9. RuntimeError: Can't call numpy() on Tensor that requires grad. Use tensor.detach().numpy() instead.
10. No error. When require_grad = True, need to call .detach() on the tensors to plot a scatterplot.
11. No error. Using torch.zeros(3) we get a tensor = [0.0, 0.0, 0.0] and then we increment all the values in the tensor by 1 using the '+=' operator.
12. RuntimeError: a leaf Variable that requires grad is being used in an in-place operation.
13. No Error. Getting the correct output: (tensor([200.]),)
14. RuntimeError: grad can be implicitly created only for scalar outputs
15. No error. But I am not getting the expected output which is 1. The actual output: (tensor([nan]),)
16. torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.63 GiB. GPU 0 has a total capacity of 14.58 GiB of which 11.56 GiB is free. Process 838575 has 134.00 MiB memory in use. Process 2408401 has 876.00 MiB memory in use. Process 2408479 has 876.00 MiB memory in use. Process 2408583 has 876.00 MiB memory in use. Process 1214535 has 210.00 MiB memory in use. Including non-PyTorch memory, this process has 100.00 MiB memory in use. Of the allocated memory 0 bytes is allocated by PyTorch, and 0 bytes is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation. 
17. TypeError: Invalid shape (3, 32, 32) for image data
18. I see a picture of a frog I guess. The image resolution is very low so it is hard to identify what the object or thing is there in the image.